/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2112                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      caseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

initialConditions
{
U           uniform (<INLET_VELOCITY>);
p           uniform 0;
k           uniform 0.24;
omega       uniform 1.78;
nut         uniform 0;
}

boundaryConditions
{
    
    fw
    {
        category        wall;
        type            noSlip;
        patches         (".*fw.*");
        options
        {
            wallFunction    highReynolds;
            motion          stationary;
        }
        values
        {
            $:initialConditions;
        }
    }
    
    rw
    {
        category        wall;
        type            noSlip;
        patches         (".*rw.*");
        options
        {
            wallFunction    highReynolds;
            motion          stationary;
        }
        values
        {
            $:initialConditions;
        }
    }
    
       
    
    susp
    {
        category        wall;
        type            noSlip;
        patches         (".*susp.*");
        options
        {
            wallFunction    highReynolds;
            motion          stationary;
        }
        values
        {
            $:initialConditions;
        }
    }
    
    body
    {
        category        wall;
        type            noSlip;
        patches         (".*body.*" ".*radiator.*");
        options
        {
            wallFunction    highReynolds;
            motion          stationary;
        }
        values
        {
            $:initialConditions;
        }
    }
    
    fr-wh
    {
        category        wall;
        type            noSlip;
        patches         (".*fr-wh.*lhs" );
        options
        {
            wallFunction    highReynolds;
            motion          rotating;
        }
        values
        {
            type        rotatingWallVelocity;
            origin (0 0 0.22987);
            axis (0 1 0);
            rotVel -65.25;
            $:initialConditions;
        }
    }
    
    rr-wh
    {
        category        wall;
        type            noSlip;
        patches         (".*rr-wh.*-lhs");
        options
        {
            wallFunction    highReynolds;
            motion          rotating;
        }
        values
        {
            type        rotatingWallVelocity;
            origin (1.651 0 0.22987);
            axis (0 1 0);
            rotVel -65.25;
            $:initialConditions;
        }
    }


    inlet
    {
        category        inlet;
        type            subSonic;
        patches         (x-min y-min);
        options
        {
            flowSpecification fixedVelocity;
        }
        values
        {
            $:initialConditions;
        }
    }

    ground
    {
    category            wall;
    type                noSlip;
    patches             (z-min);
    options
    {
        wallFunction        highReynolds;
        motion              moving;
    }
    values
    {
        $:initialConditions;
    }
}

    
    
    outlet
    {
        category        outlet;
        type            subSonic;
        patches         (x-max y-max);
        options
        {
            returnFlow      default;
        }
        values
        {
            $:initialConditions;
        }
    }

    walls
    {
        category        wall;
        type            slip;
        patches         (z-max);
        values
        {
            $:initialConditions;
        }
    }
    
     /*symmetry
    {
        category        symmetry;
        type            symmetry;
        patches         (y-max);
        
        
    }*/
    
    

    
}


// ************************************************************************* //
